// <auto-generated />
using System;
using DotNetCoreApiStarter.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Test_Assignment_Project.Migrations
{
    [DbContext(typeof(BusinessDbContext))]
    partial class BusinessDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DotNetCoreApiStarter.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedUserId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("ModificationTime");

                    b.Property<string>("ModifiedUserId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Test_Assignment_Project.Models.Entities.Record", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedUserId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Language");

                    b.Property<DateTime?>("ModificationTime");

                    b.Property<string>("ModifiedUserId");

                    b.Property<int>("MoviedbId");

                    b.Property<string>("RecordJson");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("Test_Assignment_Project.Models.Entities.SearchHistory", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedUserId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("ModificationTime");

                    b.Property<string>("ModifiedUserId");

                    b.Property<string>("SearchResultId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("SearchResultId");

                    b.HasIndex("UserId");

                    b.ToTable("SearchHistories");
                });

            modelBuilder.Entity("Test_Assignment_Project.Models.Entities.SearchResult", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Adult");

                    b.Property<string>("CreatedUserId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Language");

                    b.Property<DateTime?>("ModificationTime");

                    b.Property<string>("ModifiedUserId");

                    b.Property<string>("SearchKey");

                    b.Property<string>("SearchResultJson");

                    b.Property<string>("SearchType");

                    b.Property<int>("page");

                    b.HasKey("Id");

                    b.ToTable("SearchResults");
                });

            modelBuilder.Entity("Test_Assignment_Project.Models.Entities.SearchHistory", b =>
                {
                    b.HasOne("Test_Assignment_Project.Models.Entities.SearchResult", "SearchResult")
                        .WithMany()
                        .HasForeignKey("SearchResultId");

                    b.HasOne("DotNetCoreApiStarter.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
